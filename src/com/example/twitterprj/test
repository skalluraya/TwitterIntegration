private String downloadUrl(String myurl) throws IOException {
		InputStream is = null;
		// Only display the first 500 characters of the retrieved
		// web page content.
		int len = 500;

		try {
			URL url = new URL(myurl);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setReadTimeout(10000 /* milliseconds */);
			conn.setConnectTimeout(15000 /* milliseconds */);
			conn.setRequestMethod("GET");
			conn.setDoInput(true);
			// Starts the query
			conn.connect();
			int response = conn.getResponseCode();
			Log.d(TAG, "The response is: " + response);
			is = conn.getInputStream();

			// Convert the InputStream into a string
			String contentAsString = readIt(is, len);
			return contentAsString;

			// Makes sure that the InputStream is closed after the app is
			// finished using it.
		} finally {
			if (is != null) {
				is.close();
			}
		}
	}

	public String readIt(InputStream stream, int len) throws IOException, UnsupportedEncodingException {
		Reader reader = null;
		reader = new InputStreamReader(stream, "UTF-8");
		char[] buffer = new char[len];
		reader.read(buffer);
		return new String(buffer);
	}

	private ArrayList<Tweet> loadTweets() {

		ArrayList<Tweet> tweets = new ArrayList<Tweet>();

		try {

			String result = downloadUrl("http://search.twitter.com/search.json?q=android");
			Log.d(TAG, "result" + result);
			JSONObject root = new JSONObject(result);
			JSONArray sessions = root.getJSONArray("results");
			for (int i = 0; i < sessions.length(); i++) {
				JSONObject session = sessions.getJSONObject(i);

				Tweet tweet = new Tweet();
				tweet.content = session.getString("text");
				tweet.author = session.getString("from_user");
				tweets.add(tweet);
			}

		} catch (Exception e) {
			Log.e("TwitterFeedActivity", "Error loading JSON", e);
		}
		return tweets;
	}

	class MyTweets extends AsyncTask<Void, Void, Void> {
		private ArrayList<Tweet> tweets = null;
		private ProgressDialog progressDialog;

		protected void onPreExecute() {
			progressDialog = ProgressDialog.show(MainActivity.this, "", "Loading. Please wait...", true);
		}

		@Override
		protected Void doInBackground(Void... arg0) {
			try {
				ArrayList<Tweet> items = loadTweets();
			} catch (Exception e) {
				Log.e("TwitterFeedActivity", "Error loading JSON", e);
			}
			return null;

		}

		@Override
		protected void onPostExecute(Void result) {
			progressDialog.dismiss();
			setListAdapter(new TweetListAdaptor(MainActivity.this, R.layout.item, tweets));
		}

	}